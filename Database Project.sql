-- 1. INVENTORY_CATEGORY
CREATE TABLE INVENTORY_CATEGORY (
    ID           NUMBER PRIMARY KEY,
    NAME         VARCHAR2(100) NOT NULL,
    DESCRIPTION  VARCHAR2(255)
);

-- 2. INVENTORY_SUPPLIER
CREATE TABLE INVENTORY_SUPPLIER (
    ID             NUMBER PRIMARY KEY,
    NAME           VARCHAR2(150) NOT NULL,
    CONTACT_PERSON VARCHAR2(100),
    PHONE          VARCHAR2(20),
    EMAIL          VARCHAR2(100),
    ADDRESS        VARCHAR2(255)
);

-- 3. INVENTORY_PRODUCT
CREATE TABLE INVENTORY_PRODUCT (
    ID          NUMBER PRIMARY KEY,
    NAME        VARCHAR2(150) NOT NULL,
    SKU         VARCHAR2(50) UNIQUE,
    QUANTITY    NUMBER DEFAULT 0,
    PRICE       NUMBER(10,2),
    CATEGORY_ID NUMBER,
    SUPPLIER_ID NUMBER,
    CONSTRAINT fk_product_category FOREIGN KEY (CATEGORY_ID) REFERENCES INVENTORY_CATEGORY(ID),
    CONSTRAINT fk_product_supplier FOREIGN KEY (SUPPLIER_ID) REFERENCES INVENTORY_SUPPLIER(ID)
);

-- 4. INVENTORY_PURCHASE
CREATE TABLE INVENTORY_PURCHASE (
    ID         NUMBER PRIMARY KEY,
    QUANTITY   NUMBER NOT NULL,
    PRICE      NUMBER(10,2) NOT NULL,
    CREATED_AT DATE DEFAULT SYSDATE,
    PRODUCT_ID NUMBER NOT NULL,
    CONSTRAINT fk_purchase_product FOREIGN KEY (PRODUCT_ID) REFERENCES INVENTORY_PRODUCT(ID)
);

-- 5. INVENTORY_SALE
CREATE TABLE INVENTORY_SALE (
    ID         NUMBER PRIMARY KEY,
    QUANTITY   NUMBER NOT NULL,
    PRICE      NUMBER(10,2) NOT NULL,
    CREATED_AT DATE DEFAULT SYSDATE,
    PRODUCT_ID NUMBER NOT NULL,
    CONSTRAINT fk_sale_product FOREIGN KEY (PRODUCT_ID) REFERENCES INVENTORY_PRODUCT(ID)
);

-- 6. INVENTORY_STOCKTRANSACTION
CREATE TABLE INVENTORY_STOCKTRANSACTION (
    ID             NUMBER PRIMARY KEY,
    TRANSACTION_TYPE VARCHAR2(20) CHECK (TRANSACTION_TYPE IN ('PURCHASE', 'SALE')),
    QUANTITY       NUMBER NOT NULL,
    DATE           DATE DEFAULT SYSDATE,
    CREATED_BY_ID  NUMBER,
    PRODUCT_ID     NUMBER NOT NULL,
    CONSTRAINT fk_stock_product FOREIGN KEY (PRODUCT_ID) REFERENCES INVENTORY_PRODUCT(ID)
);
